-[:stack, :stack_foldback, :foldback_with_skinny, :foldback_skinny_settle, :reversing_skinny_settle, :naive_duplex, :conservative_duplex, :presort_duplex, :dual_rotate_duplex, :skinny_triplex].each do |method|
  -time = Time.now
  -@dropbox.calculate_best_fill(method)
  -time = Time.now - time
  .method{:style => "display: inline-block; width: #{[@dropbox.width+40, 260].max}px; height: #{@dropbox.height + 185}px; overflow: auto; "}
    .note{:style => " color: #{@dropbox.collision? ? "red" : "#333"}; font-size: 75%"}
      %b{:style => 'font-size: 110%'}= method.to_s.split("_").map{|w| w.capitalize}.join(" ") + " (#{time}s)"
      %br
      -if @dropbox.collision?
        %h2= "Error: Collision Detected." 
      Sum of Box Sizes: <b>#{@dropbox.absolute_area}</b>
      %br
      Dropbox Size: <b>#{@dropbox.actual_area}</b>
      %br
      Dropox Width: <b>#{@dropbox.width}</b>
      %br
      Dropbox Height: <b>#{@dropbox.height}</b>
      %br
      -waste = @dropbox.actual_area-@dropbox.absolute_area
      Waste: <b>#{waste}
      (#{"%0.2f" % ((waste.to_f/@dropbox.actual_area)*100)}%)</b>
    .packdisplay{:style => "float: left; position: relative; left: 20px;"}
      .overlay{:style => "width: #{@dropbox.width}px; height: #{@dropbox.height}px;"}
      -@dropbox.boxes.each_with_index do |box, i|
        .box{:style => "left: #{box.x}px; top: #{box.y}px; width: #{box.width}px; height: #{box.height}px; background:##{rand(8).to_s(16)+rand(16).to_s(16)+rand(16).to_s(16)}"}
    